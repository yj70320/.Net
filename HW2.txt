--1.How many products can you find in the Production.Product table?

select count(*) from Production.Product


--2.Write a query that retrieves the number of products in the Production.Product table that are included in a subcategory. 
--The rows that have NULL in column ProductSubcategoryID are considered to not be a part of any subcategory.

select count(ProductID) from Production.Product
where ProductSubcategoryID is not null


--3.Count how many products belong to each product subcategory.
-- Write a query that displays the result with two columns:
-- ProductSubcategoryID (the subcategory ID)， CountedProducts (the number of products in that subcategory).

select
	ProductSubcategoryID as ProductSubcategoryID,
	COUNT(ProductID) as CountedProducts
from Production.Product
group by ProductSubcategoryID


--4.How many products that do not have a product subcategory.

select COUNT(ProductID)
from Production.Product
where ProductSubcategoryID is null


--5.Write a query to list the sum of products quantity in the Production.ProductInventory table.

select SUM(Quantity)
from Production.ProductInventory


--6.Write a query to list the sum of products in the Production.ProductInventory table 
--and LocationID set to 40 and limit the result to include just summarized quantities less than 100.

select SUM(Quantity), LocationID
from Production.ProductInventory
where LocationID = 40
group by LocationID
having SUM(Quantity) < 100


--7. Write a query to list the sum of products with the shelf information in the Production.ProductInventory 
--table and LocationID set to 40 and limit the result to include just summarized quantities less than 100

select Shelf, SUM(Quantity) 
from Production.ProductInventory
where Shelf is not null and LocationID = 40
group by Shelf
having SUM(Quantity) < 100


--8.Write the query to list the average quantity for products where column LocationID has the value of 10 from the table Production.ProductInventory table.

select AVG(Quantity) 
from Production.ProductInventory
where LocationID = 10


--9.Write query  to see the average quantity  of  products by shelf  from the table Production.ProductInventory

select Shelf, AVG(Quantity) 
from Production.ProductInventory
group by Shelf 
order by Shelf asc


--10.Write query  to see the average quantity  of  products by shelf excluding rows that has the value of N/A in the column Shelf from the table Production.ProductInventory

select Shelf, AVG(Quantity) 
from Production.ProductInventory
where Shelf not in ('N/A')
group by Shelf 
order by Shelf asc


--11.List the members (rows) and average list price in the Production.Product table. This should be grouped independently over the Color and the Class column. 
--Exclude the rows where Color or Class are null.

select COUNT(ProductID) as ProductCount, AVG(ListPrice) as AverageListPrice, Color, Class 
from Production.Product
where Color is not null and Class is not null
group by Color, Class


--12.Write a query that lists the country and province names from person. CountryRegion and person. StateProvince tables. 
--Join them and produce a result set similar to the following

select cr.Name as 'Contry Name', sp.Name as 'Province Name'
from Person.CountryRegion as cr
join Person.StateProvince as sp
on cr.CountryRegionCode = sp.CountryRegionCode
order by cr.Name, sp.Name


--13.Write a query that lists the country and province names from person. CountryRegion and person. 
--StateProvince tables and list the countries filter them by Germany and Canada. Join them and produce a result set similar to the following.

select cr.Name as 'Contry Name', sp.Name as 'Province Name'
from Person.CountryRegion as cr
join Person.StateProvince as sp
on cr.CountryRegionCode = sp.CountryRegionCode
where cr.Name in ('Germany', 'Canada')
order by cr.Name, sp.Name


-- Using Northwnd Database: (Use aliases for all the Joins)
--14.List all Products that has been sold at least once in last 25 years.

select *
from dbo.Products
where CURRENT_DATE < 25

--15.List top 5 locations (Zip Code) where the products sold most.

select *
from dbo.Products as p
join dbo.[Order Details] as od
	on p.ProductID = od.ProductID
join dbo.Orders as o
	on od.OrderID = o.OrderID
where o.OrderID >= DATEADD(year, -25, getdate())


--16.List top 5 locations (Zip Code) where the products sold most in last 25 years.

select top 5 
	o.ShipPostalCode as ZipCode,
	Sum(od.Quantity) as TotalQuantitySold
from dbo.Orders as o
join dbo.[Order Details] as od
	on o.OrderID = od.OrderID
where o.OrderDate >= DATEADD(year, -25, getdate())
	and o.ShipPostalCode is not null
group by o.ShipPostalCode
order by Sum(od.Quantity) desc


--17.List all city names and number of customers in that city.    

select c.City, COUNT(c.CustomerID) as 'Number of Customers'
from dbo.Customers as c
group by c.City
order by c.City


--18.List city names which have more than 2 customers, and number of customers in that city

select c.City, COUNT(c.CustomerID) as 'Number of Customers'
from dbo.Customers as c
group by c.City
having COUNT(c.CustomerID) > 2
order by c.City


--19.List the names of customers who placed orders after 1/1/98 with order date.

select distinct c.CompanyName
from dbo.Orders as o
join dbo.Customers as c
on o.CustomerID = c.CustomerID
where o.OrderDate >= CONVERT(date, '1998-01-01')


--20.List the names of all customers with most recent order dates

select c.CompanyName, MAX(o.OrderDate) as mostRecentOrder
from dbo.Orders as o
join dbo.Customers as c
on o.CustomerID = c.CustomerID
group by c.CompanyName


--21.Display the names of all customers  along with the  count of products they bought

select c.CompanyName, SUM(od.Quantity) as 'quantity'
from dbo.Orders as o
join dbo.Customers as c
	on o.CustomerID = c.CustomerID
join dbo.[Order Details] as od
	on od.OrderID = o.OrderID
group by c.CompanyName


--22.Display the customer ids who bought more than 100 Products with count of products.

select c.CustomerID, SUM(od.Quantity) as 'quantity'
from dbo.Orders as o
join dbo.Customers as c
	on o.CustomerID = c.CustomerID
join dbo.[Order Details] as od
	on od.OrderID = o.OrderID
group by c.CustomerID
having SUM(od.Quantity) > 100



--23.Show all the possible combinations of suppliers and shippers, representing every way a supplier can ship its products.
-- The result should display two columns:

-- Supplier CompanyName， Shipper CompanyName

select 
	su.CompanyName as 'Supplier CompanyName',
	sh.CompanyName as 'Shipper CompanyName'
from dbo.Suppliers as su
cross join dbo.Shippers as sh


--24.Display the products order each day. Show Order date and Product Name.

select 
	o.OrderDate as 'Order Data',
	p.ProductName as 'Product Name'
from dbo.Orders as o
join dbo.[Order Details] as od
	on o.OrderID = od.OrderID
join dbo.Products as p
	on od.ProductID = p.ProductID
order by o.OrderDate, p.ProductName



--25.Displays pairs of employees who have the same job title.

select 
	e1.Title, 
	e1.FirstName + ' ' + e1.LastName as 'employee 1',
	e2.FirstName + ' ' + e2.LastName as 'employee 2'
from dbo.Employees as e1
join dbo.Employees as e2
	on e1.Title = e2.Title and e1.EmployeeID < e2.EmployeeID
order by e1.Title


--26.Display all the Managers who have more than 2 employees reporting to them.

select 
	e1.FirstName + ' ' + e1.LastName as 'Manager Name',
	COUNT(e2.ReportsTo) as 'Number of Employee Reports to the Manager'
from dbo.Employees as e1
join dbo.Employees as e2
	on e1.EmployeeID = e2.ReportsTo
group by e1.FirstName, e1.LastName
having COUNT(e2.EmployeeID) > 2


--27.List all customers and suppliers together, grouped by city.
-- The result should display the following columns:
-- City，CompanyName，ContactName，Type (indicating whether the record is a Customer or a Supplier).

select c.City, c.CompanyName, c.ContactName, 'Customer' as Type
from dbo.Customers as c
union all 
select s.City, s.CompanyName, s.ContactName, 'Supplier' as Type
from dbo.Suppliers as s
